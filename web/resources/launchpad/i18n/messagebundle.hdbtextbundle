DO_NOT_SHOW=Do not show this again
TITLE=SHINE (SAP HANA Interactive Education) for SAP HANA XS Advanced Model
OK_BUTTON=OK
INTRODUCTION=Introduction
WHATS_NEW=What's new with SHINE for XSA
WHATS_NEW_PREV=Released previously
TILE_HELP_PROMPT=Clicking on each tile will bring up the help for that module.
CHECK_PRE=Check Prerequisites
DG=Data Generator
POWLIST=Purchase Order Worklist
SALES_DASH=Sales Dashboard
SOWLIST=Sales Worklist
USER=User CRUD
HANA_UIS_BLUE=HANA UI Integration Services - Blue Crystal Theme
HANA_UIS_GOLD=HANA UI Integration Services - Gold Reflection Theme
SPATIAL=Spatial Demo
INATOOLKIT=INA Toolkit Demo
SALES_DASH_MOB=Sales Dashboard Mobile
FIORI_LAUNCHPAD=Fiori Launchpad
XSDS=XS Data Services (XSDS)
XSUNT=XSUnit Tests
BUSINESS_SCENARIO=Business Scenario
MAJOR_TABLES=Major database Tables/Views
UI_FOLDER=UI Folder path
PERMISSIONS=Permissions required
CONTINUE=Continue
UI5_SEARCH=Full-text Search with SAPUI5, ODATA, and CDS
JOBSCHEDULING=Runtime Job Scheduling
ETAGSXSODATA=ETags and Null values in XSOData

SHINE_INTRO=SAP HANA Interactive Education, or SHINE, is a demo application that makes it easy to learn how to build applications on SAP HANA Extended Application Services Advanced Model. This demo application is delivered as a package which contains sample data and design-time developer objects for the applications database tables, views, OData and user interface.
SHINE_WHATS_NEW=<ul><li>Cross HANA Deployment Infrastruture(HDI) Container Access</li><li>Service Replacement and Schema Conifg in MTA Deployment Descriptor</li><li>MTA Deployment Extension Descriptor</li><li>Java Runtime</li><li>oDataV4 in Java</li><li>oData batch processing and metadata caching in Node.js</li><li>Automated Role Collection Creation</li></ul>
SHINE_WHATS_NEW_1.1.12=<ul><li>Micro services based architecture</li><li>XSOData service from a node based XSJS library</li><li>All database artifacts using HDI</li></ul>
SHINE_WHATS_NEW_PREV=<ul><li>ETags and Null values in XSOData</li><li>Migration from $.db to $.hdb and XSDS in services</li><li>XSJS features - Multipart Message handling, Text Access API, XML parsing</li><li>Table type definition in Procedures</li></ul>

TILE_DESC_DG=<div>The demo application defines a set of tables, along with a basic set of initial data that comes in a set of CSV files. For example, the sales orders table begins with 1,000 records. </br><ul><li>This application provides the tools for generating additional sales and purchase order records, as well as reloading the master data tables.</li><li>The complete application data can also be reset using this module.</li></ul></div>
TILE_DESC_PO=<div>This UI illustrates a comprehensive Purchase Order Worklist which can act as a complete interface for a Purchase Department Head.</br><ul><li>There is a list of Purchase Orders and upon selection of a particular order, the general data and Purchase Order items related to the purchase order are listed in separate tabs.</li><li>He can perform Actions like Delete, Accept or Reject on these Purchase Orders and export the data to excel</li><li>He can perform search for the Purchase Orders based on different attribute like Company Name,Product ID,etc</li></ul></div>
TILE_DESC_SO=<div>This UI illustrates a Sales Order Worklist where you can create and delete Sales Orders.</br><ul><li>The Details tab provides a type of PO Worklist where all the Sales Orders are listed.</li><li>By selecting a Sales Order, you can view its details.</li><li>This tab also provides a feature for creating Sales Orders using XSJS.</li></ul></div>
TILE_DESC_SD=<div>This UI illustrates a comprehensive dashboard concept for a Sales Manager that contains several charts based on the OData models constructed in the demo content.</br><ul><li>The Overview tab contains all the sales specific charts based on Region/Country/Discount per region.</li><li>The Product Reports tab contains charts that provide sales information categorized by product.</li><li>The Details tab provides a type of PO Worklist where all the Sales Orders are listed.</li><li>By selecting a Sales Order, you can view its details.</li><li>This tab also provides a feature for creating Sales Orders using XSJS.</li></ul></div>
TILE_DESC_US=<div>The userCRUD ( Create Read Update Delete) folder contains a simple model and UI demonstrating creation and update of data.</br><ul><li>User CRUD has two server-side implementations - Node.js and Java. The switch on the top of the screen can be used to toggle between the two server-side implementations which share the same user interface.</li><li>Here in this screen, a new User record can be created as well as existing records can be updated in the table itself or deleted.</li><li>New records can be created using two methods, first by <b>simple HTTP POST request using OData</b> and second by using the <b>$batch request provided by OData</b> which allows us to create multiple records in a single HTTP request.</li><li>You can perform an update by modifying the First Name, Last Name, and/or Email fields that already exist in the table.</li><li>This UI also showcases how to integrate the custom exits for OData methods.</li></ul></div>
TILE_DESC_UIS_BLUE=<div>SAP HANA UI integration services act as a container for mini web pages. Rather than developing an entire site with dependencies between the various components, you develop small chunks of functions called widgets. Widgets are added in an application site container where they are consumed to build your final web site.</br></br>This UI Shows the Blue Crystal Runtime of the Site.</div>
TILE_DESC_UIS_GOLD=<div>SAP HANA UI integration services act as a container for mini web pages. Rather than developing an entire site with dependencies between the various components, you develop small chunks of functions called widgets. Widgets are added in an application site container where they are consumed to build your final web site.</br></br>This UI Shows the Gold Reflection Runtime of the Site.</div>
TILE_DESC_SPATIAL=<div>This UI illustrates a small demo on how spatial features and analyisis can be integrated with HANA XS applications. In this UI we use the latitude and longitude data from Address table to perform analysis over Sales and Customer data.</div>
TILE_DESC_INATOOLKIT=<div>This UI illustrates a demo on how SAP HANA INA Toolkit and INA Service can be used to create flexible search UI's. In this demo, we can do a free style search on the SalesOrders based on product name and product description.</br><font color="red">To use INA Toolkit you should have the following DU imported<ul><li>HCO_INA_UITOOLKIT.tgz (To be obtained from SAP Service Marketplace)</li><li>HCO_INA_SERVICE.tgz (To be obtained from the server)</li></ul>You will also need to assign this particular role to the user<ul><li>sap.bc.ina.service.v2.userRole::INA_USER</li></ul></font></div>
TILE_DESC_SALES_MOBILE=<div>This Mobile UI illustrates a comprehensive dashboard concept that contains several charts based on the OData model constructed in the demo content. You can see  sales specific charts based on Region/Country/Discount per region and  charts that provide sales information categorized by product.</div>
TILE_DESC_FIORI=<div>SAP Fiori launchpad is the entry point to Fiori apps on mobile or desktop devices.</br>First of all, the launchpad displays various tiles. Tiles are rectangular objects that provide access to applications. Which tiles are displayed on a user’s entry page depends on the user’s role. Depending on the role, the user can choose from a wide choice of ready-to-use tiles from the tile catalog as part of the launchpad personalization.</div>
TILE_DESC_XSDS=<div>XS Data Services (XSDS) are a native JavaScript CDS client and query builder for the XS engine to consume HANA-based records as native JavaScript objects. This UI illustrates how a sales order with multiple items can be created using XSDS query builder. In future versions of SHINE all XSJS scripts will be modified to use XSDS.</div>
TILE_DESC_XSUNT=<div>XSUnit enables automated testing of HANA XS Application content as well as database content in a convenient and isolated way.The XSUnit test framework is a custom version of the JavaScript Test framework Jasmine adapted to the XS Engine. In XSUnit you can test:<ul><li>Server side JavaScript code</li><li>SQLScript code (Stored Procedures, Views)</li><li>Modelled Calculation Views</li></ul><div>As a prerequisite the delivery unit HANA_TEST_TOOLS have to be imported which can be download from,<a target='_blank' href='https://websmp101.sap-ag.de/patches'>https://websmp101.sap-ag.de/patches</a>: Support Packages and Patches => H => SAP HANA PLATFORM EDITION => SAP HANA PLATFORM EDIT. 1.0 => Entry by component => HANA Test Tools</div></div>
TILE_DESC_UI5SEARCH=<div>This example demonstrates how to define a search model with Core Data Services (CDS) and how to use SAPUI5 to build a search UI, leveraging the OData interface. In order to run full-text search queries, full-text indexes are defined on tables containing product related data, using CDS</div>
TILE_DESC_JOBSCHEDULING=<div>This example demonstrates how to use the XSA Job Scheduler to create Job and Schedule. Created Jobs can also be deleted via this UI. And these features were enabled using XSA Job Scheduler Service</div>
TILE_DESC_ETAGSXSODATA=<div>This example demonstrates how to use ETags in XSOData and Null values for Entity properties in XSOData</div>

TILE_BUSI_SCEN_SD=As the Sales head of a company which deals in buying and selling IT equipments all over the world via e-commerce, I would like to have some Sales Analytics (Graphical representation) by which i can figure out the sales per region after orders have been executed. This  would help me in optimizing my sales strategy and enable me to make better sales decisions.
TILE_BUSI_SCEN_SP=As the Sales head of a company which deals in buying and selling IT equipments all over the world via e-commerce, I would like to visualize my Customers on a map. I would also like to select a region on the map and view its Sales data.

TILE_DB_VIEWS_DG=<div>All Master Data Tables , Purchase and Sales tables.</div>
TILE_DB_VIEWS_PO=<ul><li>PO.Header</li><li>PO.Item</li><ul>
TILE_DB_VIEWS_SO=<ul><li>EPM.Sales.Header</li><li>EPM.Sales.Item</li><li>SALES_ORDER_WORKLIST.calculationview</li><ul>
TILE_DB_VIEWS_SD=<ul><li>EPM.Sales.Header</li><li>EPM.Sales.Item</li><li>SALES_ORDER_RANKING.calculationview</li><li>CV_SALES_YEAR_COMPARISON.calculationview</li><li>CV_SALES_ORDER_RANKING*.calculationview</li><ul>
TILE_DB_VIEWS_US=<div>UserData.User</div>
TILE_DB_VIEWS_UIS_BLUE=<ul><li>EPM.Purchase.Header</li><li>EPM.Purchase.Item</li><li>AN_PURCHASE_Overview.analyticview</li><ul>
TILE_DB_VIEWS_UIS_GOLD=<ul><li>EPM.Purchase.Header</li><li>EPM.Purchase.Item</li><li>AN_PURCHASE_Overview.analyticview</li><ul>
TILE_DB_VIEWS_SPATIAL=<ul><li>EPM.MasterData.Addresses</li><li>EPM.MasterData.BusinessPartner</li><li>EPM.Sales.Header</li></ul>
TILE_DB_VIEWS_INATOOLKIT=<ul><li>EPM.Util.Texts</li><li>AT_SALES_ORDER_WORKLIST.attributeview</li></ul>
TILE_DB_VIEWS_SALES_MOB=<ul><li>EPM.Sales.Header</li><li>EPM.Sales.Item</li><li>AN_SALES_ORDER_RANKING.analyticview</li><li>CV_SALES_YEAR_COMPARISON.calculationview</li><li>CV_SALES_ORDER_RANKING*.calculationview</li></ul>
TILE_DB_VIEWS_FIORI=<div>No specific DB Views or Tables are used</div>
TILE_DB_VIEWS_XSDS=<ul><li>EPM.Sales.Header</li><li>EPM.Sales.Item</li><li>EPM.MasterData.BusinessPartner</li></ul>
TILE_DB_VIEWS_XSUNT=<div>All Views and Tables are used</div>
TILE_DB_VIEWS_UI5SEARCH=<ul><li>MD.Products CDS Table</li><li>UTIL.Texts CDS Table</li><li>MD.productTexts CDS View</li><ul>
TILE_DB_VIEWS_JOBSCHEDULING=<ul><li>Jobs.Data CDS Table</li><li>Jobs.ScheduleDetails CDS Table</li><ul>
TILE_DB_VIEWS_ETAGSXSODATA=<ul><li>User.Details CDS Table</li><ul>

TILE_UI_FOLDER_DG=/admin-ui/
TILE_UI_FOLDER_PO=/purchase-ui/
TILE_UI_FOLDER_SO=/sap/hana/democontent/epm/ui/salesDashboard/
TILE_UI_FOLDER_SD=/sap/hana/democontent/epm/ui/salesDashboard/
TILE_UI_FOLDER_US=/user-ui/
TILE_UI_FOLDER_UIS_BLUE=/sap/hana/democontent/epm/ui/uis/site/UISExample/
TILE_UI_FOLDER_UIS_GOLD=/sap/hana/democontent/epm/ui/uis/site/UISExample/
TILE_UI_FOLDER_SPATIAL=/sap/hana/democontent/epm/spatial/ui
TILE_UI_FOLDER_INATOOLKIT=/sap/hana/democontent/epm/fulltextsearch/ui
TILE_UI_FOLDER_SALES_MOB=/sap/hana/democontent/epm/ui/salesDashMobile/
TILE_UI_FOLDER_FIORI=/sap/hana/democontent/epm/ui/uis/FioriLaunchPad
TILE_UI_FOLDER_XSDS=/sap/hana/democontent/epm/xsds/ui
TILE_UI_FOLDER_XSUNT=/sap/hana/democontent/epm/test
TILE_UI_FOLDER_UI5SEARCH=/sap/hana/democontent/epm/ui5search/ui
TILE_UI_FOLDER_JOBSCHEDULING=/job-ui/
TILE_UI_FOLDER_ETAGSXSODATA=/sap/hana/democontent/epm/etagsxsodata/ui/

TILE_PERMS_DG=<div><font color="red">To access the Data Generator <ul><li>User should create Role Collection SHINE_ADMIN </li><li>Assign Admin role to Role Collection SHINE_ADMIN</li><li>Assign SHINE_ADMIN Role Collection to User</li></ul> Refer to SHINE for XSA documentation for steps</font>.</div>
TILE_PERMS_PO=<div>None.</div>
TILE_PERMS_SO=<div>Time Data has to be generated.</div>
TILE_PERMS_SD=<div>Time Data has to be generated.</div>
TILE_PERMS_US=<div>None.</div>
TILE_PERMS_UIS_BLUE=<div>User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator. We need sap.hana.uis.db::SITE_DESIGNER & sap.hana.uis.db::SITE_USER with sap.hana.uis.privileges::AppSiteAccess-All ( Application Privilege) to access the Site. ( these are already added as part of User.Hdbrole)</div>
TILE_PERMS_UIS_GOLD=<div>User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator. We need sap.hana.uis.db::SITE_DESIGNER & sap.hana.uis.db::SITE_USER with sap.hana.uis.privileges::AppSiteAccess-All ( Application Privilege) to access the Site. ( these are already added as part of User.Hdbrole)</div>
TILE_PERMS_SPATIAL=<div>User should have User.hdbrole.</div>
TILE_PERMS_INATOOLKIT=<div>User should have User.hdbrole and sap.bc.ina.service.v2.userRole::INA_USER.</div>
TILE_PERMS_SALES_MOB=<div>User should have User.hdbrole,Time Data has to be generated, Create Synonyms should have been executed in Data Generator.</div>
TILE_PERMS_FIORI=<div>WidgetAccess:FioriShineCatalog and AppSiteAccess:FioriShineLaunchPad</div>
TILE_PERMS_XSDS=<div>User should have User.hdbrole, Time Data has to be generated, Create Synonyms should have been executed in Data Generator.</div>
TILE_PERMS_XSUNT_DU = Hana Test Tools DU should be imported
TILE_PERMS_XSUNT_ROLE =  User should have the role sap.hana.testtools.common::TestExecute & Admin.role
TILE_PERMS_XSUNT_ASSERTION = To test xsodata/xsjs services, the below step needs to be done
TILE_PERMS_XSUNT_ASSERTION_USER = Enable SAP Assertion Ticket for the User
TILE_PERMS_XSUNT_ASSERTION_PACKAGE = Enable SAP Logon/Assertion Ticket for sap.hana.democontent.epm package
TILE_PERMS_XSUNT_ASSERTION_DESTINATION = Extend the destination localhost.xshttpdest under the package sap.hana.testtools.unit.jasminexs.lib using XS Admin tool.In the extended destination edit the hostname, port and in the Authenticate Details tab enable SAP Assertion Ticket with corresponding SAP SID & client
TILE_PERMS_UI5SEARCH=<div>User should have User.hdbrole.</div>
TILE_PERMS_JOBSCHEDULING=<div>None</div>
TILE_PERMS_ETAGSXSODATA=<div>User should have User.hdbrole.</div>

CHECKING_PRE=Checking Prerequisites
PRE_PROMPT=Please check Section 5 of this guide for the complete list of prerequisites.
PDF_LINK=http://help.sap.com/hana/SAP_HANA_Interactive_Education_SHINE_for_SAP_HANA_XS_Advanced_Model_en.pdf
LINK_PROMPT=Getting started guide
USER_ROLE_PRESENT=User role status
ADMIN_ROLE_PRESENT=Admin role status
ANALYTIC_PRIVILEGE=Analytic privileges for models
TIME_DATA_GENERATED=Time data generated
GENERATE_TIME_DATA=Generate Time data
GENERATE_TIME_DATA_SUCCESS=Time data generated successfully.
GENERATE_TIME_DATA_ERROR=Time data could not be generated.
ROLE_COLLECTION=Role Collections
CREATE_ROLE_COLLECTION=Create Role Collections
SYNONYM_PRESENT=Synonyms present
CREATE_SYNONYMS=Create Synonyms
CREATE_SYNONYMS_SUCCESS=Synonyms created successfully.t
CREATE_SYNONYMS_ERROR=Synonyms could not be created.
CANT_CHECK=Not able to check the prerequisites
INA_TOOLKIT_STATUS=INA Toolkit status
TIME_INFO=<div>Data needs to be loaded into the M_TIME_DIMENSION Time Dimension table in the _SYS_BI Schema for the models and charts to work perfectly. You can easily generate this data by clicking on <b>Generate Time Data</b> button. This can also be done by navigating to the Modeler view in the SAP HANA Studio, select your System and then select Generate Time Data and fill up the relevant information. Data should be present at least for year 2012.</div>
SYNONYMS_INFO=<div>Synonyms are required for Currency conversion to work. This can easily be done by clicking on <b>Create Synonyms</b> button or navigate to the Data Generator to generate the synonyms.</div>
ROLE_COLLECTION_INFO=<div>In order to launch the data generator tile, we need a role collection which has a role template shine admin. Click on the button "Create Role Collection" to create a role collection with the name SHINE_ADMIN and assign the role template shine admin to it. You will be logged out after the role collection creation.</div>
ERROR_ROLECOLLECTION=An error occured while creating roles. Please contact your system administrator for further investigation.
ERROR_ROLECREATION=An error occured while creating roles. Please contact your system administrator for further investigation.
SUCCESS_ROLECOLLECTION=Role Collections have been successfully created. please logout of the application for the changes to be reflected.
ERROR_CSRFTOKEN=An error occured while checking your authorization. Please assign the XS_AUTHORIZATION_ADMIN role collection to your user and retry.
ERROR_APPLICATION_NOT_FOUND=Couldnt find the required application for authorization. Please contact your system administrator for further investigation.
