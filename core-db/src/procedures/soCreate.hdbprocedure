PROCEDURE "soCreate" ( 
	IN im_so_details "SO.Item",
	OUT ex_error  "Procedures.tt_errors" ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
declare lv_salesorderid string;
declare lv_partnerid string;
declare lv_grossamount DECIMAL(5,2);
declare lv_netamount DECIMAL(5,2);
declare lv_taxamount DECIMAL(5,2);
declare lv_currency string;
declare lv_productid string;
declare lv_quantity integer;
declare lv_date string;
declare lv_price DECIMAL(15,2);
declare lv_val string;

select "PRODUCT.PRODUCTID",CURRENCY,QUANTITY,DELIVERYDATE
     into lv_productid,  
          lv_currency,lv_quantity,lv_date
                      from :im_so_details;
                      
                      
select price into lv_price from "MD.Products" where PRODUCTID = :lv_productid;
select (max(SALESORDERID)+1) into lv_salesOrderId from "SO.Header";


lv_netamount := :lv_price * :lv_quantity;
lv_taxamount := :lv_netamount * 0.19;
lv_grossamount := :lv_netamount + :lv_taxamount;

 if :lv_productid = '' then
 
  ex_error = select 500 as http_status_code, 
               'Invalid Product ' || lv_productid as error_message, 
                     'No Way! Product field can not be empty' as detail from dummy;
else
                      

    insert into "SO.Header" 
             values('0' || lv_salesOrderId,'0000000033',CURRENT_DATE,'0000000033',CURRENT_DATE,'','0100000000',lv_currency,lv_grossamount,lv_netamount,
             		lv_taxamount,'N','I','I');
         			
	insert into "SO.Item" 
             values ('0' || lv_salesOrderId,'0000000010',lv_productid,'',lv_currency,lv_grossamount,lv_netamount, lv_taxamount,
        			'I','',lv_quantity,'EA',lv_date);   			
        			
 end if;
 END;